{"version":3,"sources":["Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/Title/Title.module.css","Components/Container/Container.js","Components/Title/Title.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","styles","container","Title","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","clearError","axios","defaults","baseURL","operations","fetchContacts","dispatch","a","get","then","data","catch","error","addContact","name","number","contact","post","deleteContact","contactId","delete","getFilter","state","phoneBook","filter","getAllContacts","contacts","selectors","getLoading","loading","getError","getFilteredContactsList","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","message","setMessage","note","setState","setTimeout","handleSubmit","e","preventDefault","props","find","item","onSubmit","handleChange","target","value","this","alert","form","input","type","placeholder","onChange","btn","Component","connect","onDelete","id","clearFilter","list","map","onClick","aria-label","dispatsh","onChangeFilter","phonebookActions","title","initialState","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phoneBookReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4727449.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__3S2no\",\"title\":\"Filter_title__w_qIR\",\"input\":\"Filter_input__1h1sc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3bprE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__2rC4O\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport styles from './Title.module.css';\n\nconst Title = () => {\n  return (\n    <h1 className={styles.Title}>Phonebook</h1>\n  );\n};\n\nexport default Title;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nexport const clearError = createAction('contacts/clearError');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error)));\n};\n\nconst addContact = (name, number) => async (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n  \n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nconst operations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n\nexport default operations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = (state) => state.phoneBook.loading;\n\nconst getFilter = (state) => state.phoneBook.filter;\n\nconst getAllContacts = (state) => state.phoneBook.contacts;\n\nconst getError = (state) => state.phoneBook.error;\n\nconst getFilteredContactsList = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n//ty\nconst selectors = {\n  getFilter,\n  getAllContacts,\n  getLoading,\n  getError,\n  getFilteredContactsList,\n};\n\nexport default selectors;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport operations from '../../redux/phonebook/phonebook-operations';\nimport selectors from '../../redux/phonebook/phonebook-selectors';\n\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    message: null,\n  };\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func,\n  };\n\n  setMessage = note => {\n    this.setState({ message: note });\n    setTimeout(() => {\n      this.setState({ message: null });\n    }, 2500);\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    if (name === '') {\n      this.setMessage('Enter contact name, please!');\n      return;\n    }\n    if (number === '') {\n      this.setMessage('Enter contact phone, please!');\n      return;\n    }\n    if (\n      this.props.contacts.find(\n        item => item.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      this.setMessage('Contact already exists!');\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { name, number, message } = this.state;\n\n    return (\n      message && alert(message),\n      (\n        <div className={styles.container}>\n          <form className={styles.form} onSubmit={this.handleSubmit}>\n            <label>\n              <input\n                className={styles.input}\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                placeholder=\"Name\"\n                onChange={this.handleChange}\n              />\n            </label>\n            <label>\n              <input\n                className={styles.input}\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                placeholder=\"Phone\"\n                onChange={this.handleChange}\n              />\n            </label>\n            <button className={styles.btn} type=\"submit\">\n              Add contact\n            </button>\n          </form>\n        </div>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport operations from '../../redux/phonebook/phonebook-operations';\nimport selectors from '../../redux/phonebook/phonebook-selectors';\n\nconst ContactList = ({ contacts, onDelete, clearFilter }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contact}>\n          <span className={styles.name}>{name}</span>\n          <span className={styles.number}>{number}</span>\n          <button\n            className={styles.btn}\n            onClick={() => {\n              onDelete(id, clearFilter());\n            }}\n            aria-label=\"Удалить контакт\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onDelete: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getFilteredContactsList(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: id => dispatch(operations.deleteContact(id)),\n  clearFilter: () => dispatch(changeFilter('')),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport selectors from '../../redux/phonebook/phonebook-selectors';\n\nconst Filter = ({ value, onChangeFilter, contacts }) => {\n  return (\n    <form className={styles.form}>\n      <label>\n        <span className={styles.title}>Search by name</span>\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </form>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = state => ({\n  value: selectors.getFilter(state),\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatsh) => ({\n  onChangeFilter: (e) =>\n    dispatsh(phonebookActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Container from './Components/Container/Container';\nimport Title from './Components/Title/Title';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nconst App = ({ contacts }) => {\n  return (\n    <Container>\n      <Title />\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.phoneBook.contacts,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  changeFilter,\n  clearError,\n} from './phonebook-actions';\n\nconst initialState = {\n  contacts: [],\n  filter: '',\n  loading: false,\n  error: null,\n};\n\nconst contacts = createReducer(initialState.contacts, {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(initialState.loading, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(initialState.error, {\n  [fetchContactError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [clearError]: () => null,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport phoneBookReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fNsa\",\"input\":\"ContactForm_input__1HEom\",\"btn\":\"ContactForm_btn__2fLiu\",\"container\":\"ContactForm_container__3peNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2agry\",\"contact\":\"ContactList_contact__3-k2T\",\"name\":\"ContactList_name__2V7JO\",\"number\":\"ContactList_number__3EH_n\",\"btn\":\"ContactList_btn__1ZhB2\"};"],"sourceRoot":""}